---
 title: "Анализ данных сетевого трафика при помощи библиотеки Arrow"
 author: "odintsovajulia19@yandex.ru"
 format: 
   md:
     output-file: README.md
---

## Цель работы 

1. Изучить возможности технологии Apache Arrow для обработки и анализ больших
 данных
 2. Получить навыки применения Arrow совместно с языком программирования R
 3. Получить навыки анализа 
метаинфомации о сетевом трафике


## Исходные данные 
 
1. Программное обеспечение Windows 10 

2. Rstudio Desktop

3. Интерпретатор языка R 4.1

4. Apache Arrow

5. tm_data.pqt

## Задание

Используя язык программирования R, библиотеку arrow
и IDE Rstudio Destop, выполнить задания и составить отчет.

## Ход работы

### Подготовка рабочей среды

-Подготовим рабочую среду

```{r}
library(arrow)
library(dplyr)
download.file("https://storage.yandexcloud.net/arrow-datasets/tm_data.pqt",destfile = "tm_data.pqt")
data = arrow::open_dataset(sources = "tm_data.pqt", format = "parquet")
```

### Задание 1: Надите утечку данных из Вашей сети

 Важнейшие документы с результатами нашей исследовательской деятельности в
 области создания вакцин скачиваются в виде больших заархивированных дампов.
 Один из хостов в нашей сети используется для пересылки этой информации – он
 пересылает гораздо больше информации на внешние ресурсы в Интернете, чем
 остальные компьютеры нашей сети. Определите его IP-адрес.


```{r}
leak_1 = 
  data %>%
     group_by(src) %>%
     summarise(sum = sum(bytes, na.rm = TRUE), .groups = 'drop') %>%
     arrange(desc(sum))

 leak_1_df = as.data.frame(leak_1)
 result_1 = 
   slice( leak_1_df, 1) %>%
     select(src)
print(result_1)
```


### Задание 2: Надите утечку данных 2

Другой атакующий установил автоматическую задачу в системном планировщике
cron для экспорта содержимого внутренней wiki системы. Эта система генерирует
большое количество трафика в нерабочие часы, больше чем остальные хосты.
Определите IP этой системы. Известно, что ее IP адрес отличается от нарушителя из
предыдущей задачи.


```{r}
work_hours = 
  data %>%
    select(timestamp, src, dst, bytes) %>%
    mutate(hour = hour(as_datetime(timestamp / 1000))) %>%
    filter(hour >= 0 & hour < 24) %>%
    group_by(hour) %>%
    summarise(work_hours = n(), .groups = 'drop') %>%
    arrange(desc(work_hours))

work_hours_df = work_hours %>% collect()
print(work_hours_df)
```

- Понимаем, что для поиска будет использоваться временной интервал 0 - 15

```{r}
leak_2 = 
  data %>%
  mutate(hour = hour(as_datetime(timestamp / 1000))) %>%
  filter(!str_detect(src, "^13\\.37\\.84\\.125")) %>%
  filter(hour >= 1 & hour <= 15) %>%
  group_by(src) %>%
  summarise(sum = sum(bytes), .groups = 'drop') %>%
  arrange(desc(sum)) %>%
  head(1) %>%
  select(src)

leak_2_df = leak_2 %>% collect()
print(leak_2_df)
```
 
### Задание 3: Надите утечку данных 3
 
Еще один нарушитель собирает содержимое электронной почты и отправляет в
Интернет используя порт, который обычно используется для другого типа трафика.
Атакующий пересылает большое количество информации используя этот порт,
которое нехарактерно для других хостов, использующих этот номер порта.
Определите IP этой системы. Известно, что ее IP адрес отличается от нарушителей
из предыдущих задач.
 
```{r}
unsafe_ports = 
  data %>%
  filter(!str_detect(src, "^13\\.37\\.84\\.125")) %>%
  filter(!str_detect(src, "^12\\.55\\.77\\.96")) %>%
  select(src, bytes, port)

unsafe_ports_agr = 
  unsafe_ports %>%
  group_by(port) %>%
  summarise(
    mean = mean(bytes, na.rm = TRUE),
    max = max(bytes, na.rm = TRUE),
    sum = sum(bytes, na.rm = TRUE),
    .groups = 'drop'
  ) %>%
  mutate(diff = max - mean) %>%
  filter(diff != 0) %>%
  arrange(desc(diff)) %>%
  head(1)

unsafe_ports_df = unsafe_ports_agr %>% collect()
print(unsafe_ports_df)

```
 
- Пришли к выводу, что порт 119 наиболее вероятно используется нарушителем. Посмотрим информацию о нем
 
```{r}
leak_3 = 
  unsafe_ports %>%
  filter(port == 119) %>%
  group_by(src) %>%
  summarise(mean = mean(bytes, na.rm = TRUE), .groups = 'drop') %>%
  arrange(desc(mean)) %>%
  head(1) %>%
  select(src)

leak_3_df = leak_3 %>% collect()
print(leak_3_df)
```

## Оценка результата

С использованием инструментов arrow были проделаны задания по исследованию сетевого трафика.

## Вывод 

Провели работу с arrow, проанализировали информацию о сетевом трафике.
 