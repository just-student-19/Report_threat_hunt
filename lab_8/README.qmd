---
 title: " Анализ данных сетевого трафика с использованием аналитической in-memory СУБД DuckDB"
 author: "odintsovajulia19@yandex.ru"
 format: 
   md:
     output-file: README.md
---
Изначально работа проходила под логином user11.

## Цель работы 

1. Изучить возможности СУБД DuckDB для обработки и анализ больших данных
2. Получить навыки применения DuckDB совместно с языком программирования R
3. Получить навыки анализа метаинфомации о сетевом трафике
4. Получить навыки применения облачных технологий хранения, подготовки и анализа данных: Yandex Object Storage, Rstudio Server.

## Исходные данные 
 
1. Программное обеспечение Windows 10 
2. Данные tm_data.pqt
2. Rstudio Server
3. Интерпретатор языка R 4.1
4. DuckDB и Dplyr.

## Задание

Используя язык программирования R, OLAP СУБД
DuckDB библиотеку duckdb и облачную IDE Rstudio
Server, развернутую в Yandex Cloud, выполнить задания
и составить отчет.

## Ход работы

### Задание 1: Надите утечку данных из Вашей сети

Важнейшие документы с результатами нашей исследовательской деятельности в
 области создания вакцин скачиваются в виде больших заархивированных дампов.
 Один из хостов в нашей сети используется для пересылки этой информации – он
 пересылает гораздо больше информации на внешние ресурсы в Интернете, чем
 остальные компьютеры нашей сети. Определите его IP-адрес.

-Подготовим рабочую среду

```{r}
options(timeout = 1000000)
download.file("https://storage.yandexcloud.net/arrow-datasets/tm_data.pqt",destfile = "tm_data.pqt")
library(duckdb)
library(dplyr)
con <- dbConnect(duckdb())
dbExecute(con,"CREATE TABLE tbl as SELECT * FROM read_parquet('tm_data.pqt')")
```

2. Решение 

```{r}
dbGetQuery(con,"SELECT src FROM tbl
WHERE (src LIKE '12.%' OR src LIKE '13.%' OR src LIKE '14.%') 
AND NOT (dst LIKE '12.%' AND dst LIKE '13.%' AND dst LIKE '14.%')
GROUP BY src
order by sum(bytes) desc
limit 1") %>% knitr::kable()
```

### Задание 2: Надите утечку данных 2

Другой атакующий установил автоматическую задачу в системном планировщике
cron для экспорта содержимого внутренней wiki системы. Эта система генерирует
большое количество трафика в нерабочие часы, больше чем остальные хосты.
Определите IP этой системы. Известно, что ее IP адрес отличается от нарушителя из
предыдущей задачи.

```{r}
dbGetQuery(con,"SELECT 
    time,
    COUNT(*) AS trafictime
FROM (
    SELECT 
        timestamp,
        src,
        dst,
        bytes,
        (
            (src LIKE '12.%' OR src LIKE '13.%' OR src LIKE '14.%')
            AND (dst NOT LIKE '12.%' AND dst NOT LIKE '13.%' AND dst NOT LIKE '14.%')
        ) AS trafic,
        EXTRACT(HOUR FROM epoch_ms(CAST(timestamp AS BIGINT))) AS time
    FROM tbl
) sub
WHERE trafic = TRUE AND time BETWEEN 0 AND 24
GROUP BY time
ORDER BY trafictime DESC;") %>% knitr::kable()
```
 
- Понимаем, что для поиска будет использоваться временной интервал 0 - 15
 
```{r}
dbGetQuery(con,"
SELECT src
FROM (
    SELECT src, SUM(bytes) AS total_bytes
    FROM (
        SELECT *,
            EXTRACT(HOUR FROM epoch_ms(CAST(timestamp AS BIGINT))) AS time
        FROM tbl
    ) sub
    WHERE src <> '13.37.84.125'
        AND (src LIKE '12.%' OR src LIKE '13.%' OR src LIKE '14.%')
        AND (dst NOT LIKE '12.%' AND dst NOT LIKE '13.%' AND dst NOT LIKE '14.%')
        AND time BETWEEN 1 AND 15
    GROUP BY src
) grp
ORDER BY total_bytes DESC
LIMIT 1;") %>% knitr::kable()
```
 
### Задание 3: Надите утечку данных 3
 
Еще один нарушитель собирает содержимое электронной почты и отправляет в
Интернет используя порт, который обычно используется для другого типа трафика.
Атакующий пересылает большое количество информации используя этот порт,
которое нехарактерно для других хостов, использующих этот номер порта.
Определите IP этой системы. Известно, что ее IP адрес отличается от нарушителей
из предыдущих задач.
 
```{r}
dbExecute(con,"CREATE TEMPORARY TABLE task31 AS
SELECT src, bytes, port
FROM tbl
WHERE src <> '13.37.84.125'
    AND src <> '12.55.77.96'
    AND (src LIKE '12.%' OR src LIKE '13.%' OR src LIKE '14.%')
    AND (dst NOT LIKE '12.%' AND dst NOT LIKE '13.%' AND dst NOT LIKE '14.%');")

dbGetQuery(con,"SELECT port, AVG(bytes) AS mean_bytes, MAX(bytes) AS max_bytes, SUM(bytes) AS sum_bytes, MAX(bytes) - AVG(bytes) AS Raz
FROM task31
GROUP BY port
HAVING MAX(bytes) - AVG(bytes) != 0
ORDER BY Raz DESC
LIMIT 1;") %>% knitr::kable()
```
 
- Пришли к выводу, что порт 37 наиболее вероятно используется нарушителем. Посмотрим информацию о нем
 
```{r}
dbGetQuery(con,"SELECT src
FROM (
    SELECT src, AVG(bytes) AS mean_bytes
    FROM task31
    WHERE port = 37
    GROUP BY src
) AS task32
ORDER BY mean_bytes DESC
LIMIT 1;") %>% knitr::kable()
```

## Оценка результата

С использованием инструментов DuckDB и RStudio Server были проведены задания по исследованию сетевого трафика.

## Вывод 

Провели работу с DuckDB, ознакомились с применением облачных технологий для хранения, подготовки и анализа данных, а также проанализировали метаинформацию о сетевом трафике.
 